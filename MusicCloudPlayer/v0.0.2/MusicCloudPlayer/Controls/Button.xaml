<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Width" Value="10" />
        <Setter Property="FrameworkElement.Height" Value="10" />
        <Setter Property="Control.Background" Value="#00000000" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Path Name="Icon" Data="{DynamicResource CloseIcon}" Fill="{StaticResource AccentColor}" Stretch="Uniform" Opacity="0.5" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="Icon" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MinimizeButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Width" Value="10" />
        <Setter Property="FrameworkElement.Height" Value="10" />
        <Setter Property="Control.Background" Value="#00000000" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Path Name="Icon" Data="{StaticResource MinimizeIcon}" Fill="{StaticResource AccentColor}" Stretch="Uniform" Opacity="0.5" VerticalAlignment="Bottom" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="Icon" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="Search" TargetType="{x:Type ToggleButton}">
        <Grid Background="#00000000">
            <Path Name="Icon" Data="{DynamicResource SearchIcon}" Fill="#FF808080" Stretch="Uniform" Opacity="0.8" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="Icon" Property="UIElement.Opacity" Value="1" />
                <Setter TargetName="Icon" Value="{StaticResource AccentColor}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="Icon" Property="UIElement.Opacity" Value="0.2" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="List" TargetType="{x:Type ToggleButton}">
        <Grid Background="#00000000">
            <Path Name="Icon" Data="{DynamicResource ListIcon}" Fill="#FF808080" Stretch="Uniform" Opacity="0.8" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="Icon" Property="UIElement.Opacity" Value="1" />
                <Setter TargetName="Icon" Value="{StaticResource AccentColor}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="Icon" Property="UIElement.Opacity" Value="0.2" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="Shuffle" TargetType="{x:Type ToggleButton}">
        <Grid Background="#00000000">
            <Path Name="Icon" Data="{StaticResource ShuffleIcon}" Fill="#FF808080" Stretch="Uniform" Opacity="0.7" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="Icon" Property="UIElement.Opacity" Value="1" />
                <Setter TargetName="Icon" Value="{StaticResource AccentColor}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="Icon" Property="UIElement.Opacity" Value="0.2" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="Repeat" TargetType="{x:Type ToggleButton}">
        <Grid Background="#00000000">
            <Path Name="Icon" Data="{StaticResource RepeatIcon}" Fill="#FF808080" Stretch="Uniform" Opacity="0.7" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="Icon" Property="UIElement.Opacity" Value="1" />
                <Setter TargetName="Icon" Value="{StaticResource AccentColor}" Property="Shape.Fill" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="Icon" Property="UIElement.Opacity" Value="0.2" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="PrevButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Width" Value="26" />
        <Setter Property="FrameworkElement.Height" Value="26" />
        <Setter Property="UIElement.RenderTransform">
            <Setter.Value>
                <TranslateTransform />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="RootGrid">
                        <Ellipse Name="Base" Stretch="Fill" Fill="#00FFFFFF" />
                        <Path Name="Icon" Data="{StaticResource PrevIcon}" Fill="#FF808080" Stretch="Uniform" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="UIElement.Opacity" Value="0.2" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="Icon" Value="White" Property="Shape.Fill" />
                            <Setter TargetName="Base" Value="Black" Property="Shape.Fill" />
                            <Setter TargetName="Icon" Property="FrameworkElement.Margin" Value="-2" />
<!-- 
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ControlButtonPressAnim}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ControlButtonReleaseAnim}" />
                            </Trigger.ExitActions> -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PlayPauseButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FrameworkElement.Margin" Value="5,0,5,0" />
        <Setter Property="FrameworkElement.Width" Value="36" />
        <Setter Property="FrameworkElement.Height" Value="36" />
        <Setter Property="UIElement.RenderTransform">
            <Setter.Value>
                <TranslateTransform x:Name="Translate" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="RootGrid">
                        <Ellipse Name="Base" Stretch="Fill" Fill="#00FFFFFF" />
                        <Path Name="Icon" Data="{StaticResource PlayIcon}" Fill="#FF808080" Stretch="Uniform" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="Icon" Value="{StaticResource PauseIcon}" Property="Path.Data" />
                            <!-- <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ControlButtonPressAnim}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ControlButtonPressAnim}" />
                            </Trigger.ExitActions> -->
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="Icon" Value="White" Property="Shape.Fill" />
                            <Setter TargetName="Base" Value="Black" Property="Shape.Fill" />
                            <Setter TargetName="Icon" Property="FrameworkElement.Margin" Value="-2" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="UIElement.Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NextButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Width" Value="26" />
        <Setter Property="FrameworkElement.Height" Value="26" />
        <Setter Property="UIElement.RenderTransform">
            <Setter.Value>
                <TranslateTransform x:Name="Translate" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="RootGrid">
                        <Ellipse Name="Base" Stretch="Fill" Fill="#00FFFFFF" />
                        <Path Name="Icon" Data="{StaticResource NextIcon}" Fill="#FF808080" Stretch="Uniform" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="UIElement.Opacity" Value="0.2" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="Icon" Value="White" Property="Shape.Fill" />
                            <Setter TargetName="Base" Value="Black" Property="Shape.Fill" />
                            <Setter TargetName="Icon" Property="FrameworkElement.Margin" Value="-2" />
<!-- 
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ControlButtonPressAnim}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ControlButtonReleaseAnim}" />
                            </Trigger.ExitActions> -->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SettingsButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Width" Value="10" />
        <Setter Property="FrameworkElement.Height" Value="10" />
        <Setter Property="Control.Background" Value="#00000000" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Path Name="Icon" Data="{StaticResource CogIcon}" Fill="{StaticResource AccentColor}" Stretch="Uniform" Opacity="0.5" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="Icon" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MetroCircleButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Control.Background" Value="{DynamicResource ButtonNormalBackground}"/>
        <Setter Property="Control.BorderBrush" Value="#FF707070"/>
        <Setter Property="Control.BorderThickness" Value="1"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.Padding" Value="1"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Name="grid" Background="#02FFFFFF">
                        <Ellipse Name="ellipsebg"
                                         Margin="4"
                                         Stroke="{TemplateBinding Control.Foreground}"
                                         StrokeThickness="0"
                                         VerticalAlignment="Stretch"/>
                        <Ellipse Name="ellipse"
                                         Margin="4"
                                         Stroke="{TemplateBinding Control.Foreground}"
                                         StrokeThickness="2"
                                         VerticalAlignment="Stretch"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                         Margin="{TemplateBinding Control.Padding}"
                                         RecognizesAccessKey="True"
                                         SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                         VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="ellipsebg"
                                             Value="Black"
                                             Property="Shape.Fill"/>
                            <Setter TargetName="ellipsebg"
                                             Property="UIElement.Opacity"
                                             Value="0.2"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="ellipse"
                                             Property="UIElement.Opacity"
                                             Value="1"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="False">
                            <Setter TargetName="ellipse"
                                             Property="UIElement.Opacity"
                                             Value=".5"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsKeyboardFocused" Value="True"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="Control.Foreground" Value="#FFADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground"
             EndPoint="0,1"
             StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0"/>
        <GradientStop Color="#EBEBEB" Offset="0.5"/>
        <GradientStop Color="#DDDDDD" Offset="0.5"/>
        <GradientStop Color="#CDCDCD" Offset="1"/>
    </LinearGradientBrush>
    <ControlTemplate x:Key="SearchBoxButton" TargetType="{x:Type ToggleButton}">
        <Grid Background="#00000000">
            <Path Name="Icon" Data="{StaticResource SearchIcon}" Fill="{StaticResource AccentColor}" Stretch="Uniform" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="Icon" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="Icon" Value="{StaticResource CloseIcon}" Property="Path.Data" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="Icon" Property="UIElement.Opacity" Value="0.2" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="VolumeButton" TargetType="{x:Type ToggleButton}">
        <Grid Background="#00000000">
            <Path Name="Icon" Data="{StaticResource SoundIcon}" Fill="{StaticResource AccentColor}" Stretch="Uniform" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter TargetName="Icon" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="Icon" Value="{StaticResource SoundMuteIcon}" Property="Path.Data" />
                <Setter TargetName="Icon" Property="Shape.Fill" Value="#FFD3D3D3" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="Icon" Property="UIElement.Opacity" Value="0.2" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>